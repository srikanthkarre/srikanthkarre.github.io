- name: Spaced Repetition Learning Using Reinforcement Learning
  url: https://github.com/sushanthsamala/Spaced-Repetition-Learning-Using-RL
  code: https://github.com/sushanthsamala/Spaced-Repetition-Learning-Using-RL
  description: A reinforcement learning tutoring agent that interacts with a student simulation and chooses the activities/topics that help students maximize knowledge by carefully analysing the trade off between learning new topics and revising already learned topics at a particular moment, which is also known as <strong>Spaced Repetition Learning</strong> . Our primary contribution is an automated tutor which takes an observation of student answering question and chooses the next question to review or learn. The agent outperformed various heuristic scheduler algorithms such as the popular <strong>Leitner</strong> and <strong>SuperMemo</strong>.
  used:
    - thing: Python
    - thing: Reinforcement Learning
    - thing: OpenAI Gym
    - thing: PyTorch
    - thing: A2C

- name: Self Supervised GANs via Auxiliary Loss and Learning Rate Decay
  url: https://github.com/sushanthsamala/SSGAN-LD-EE
  code: https://github.com/sushanthsamala/SSGAN-LD-EE
  description: Created a self-supervised machine learning model to generate images. I used a Generative Adversarial Network with Auxiliary Rotation Loss to generate realistic images. The model achieved an <strong>FID score of 215 on MNIST dataset</strong> and an <strong>FID score of 226 on CIFAR dataset</strong>.
  used:
    - thing: Python
    - thing: PyTorch
    - thing: GAN
    - thing: Machine Learning

- name: Quora Question Pairs (Kaggle Competition)
  url: https://github.com/sushanthsamala/Quora-Duplicate-Question-Detection
  code: https://github.com/sushanthsamala/Quora-Duplicate-Question-Detection
  description: Duplicate question detection using various classical feature engineering techniques and by learning high level features using Ensemble model of Siamese Network and XGBoost with Glove Embeddings. Our submission was among top 10% and later model was improved with <strong>state-of-the-art BERT embeddings to achieve accuracy of 92%</strong>.
  used:
    - thing: Python
    - thing: PyTorch
    - thing: Transformers
    - thing: Spacy
    - thing: NLP

- name: Landmark Recognition
  url: https://github.com/sushanthsamala/landmark-recognition
  code: https://github.com/sushanthsamala/landmark-recognition
  description: Landmark recognition is an instance recognition task and has its own set of challenges. The first and most critical of them is that it is impossible to provide a concrete concept of a landmark. Landmarks do not have a common structure and can be just about anything; buildings, monuments, cathedrals, parks, waterfalls, castles, etc. I built a state-of-the-art landmark recognition model by enhancing the famous Inception model architecture, my model achieved an accuracy of 90%. I fine-tuned the famous deep learning architectures like EfficientNet, ResNet, VGG to fit the Google landmark dataset.
  used:
    - thing: Python
    - thing: PyTorch
    - thing: Python Flask
    - thing: Machine Learning
    - thing: Kubernetes
    - thing: Docker
    - thing: Inception
    - thing: EfficientNet
    - thing: ResNet
    - thing: VGG

- name: Image Recognizer
  url: https://github.com/sushanthsamala/image-recognizer-web-app
  code: https://github.com/sushanthsamala/image-recognizer-web-app
  description: Comparing images is very easy for humans we can easily identify a dog in a picture, but it's difficult to put into words what a dog is, for example dog has 4 legs, but many animals have four legs, dog had a tail, but many animals have tails, to say the least it is very difficult for computers to identify a dog. This Image Recognizer web application is Dockerized and scaled using Kubernetes with 4 replicas. The web application allows a user to upload an image and get a class label and confidence of the model. The machine learning model uses the famous AlexNet architecture and trained on the complete ImageNet dataset.
  used:
    - thing: Python
    - thing: PyTorch
    - thing: Python Flask
    - thing: Machine Learning
    - thing: Kubernetes
    - thing: ImageNet
    - thing: Docker
    - thing: AlexNet

- name: 3D Object Detection for Autonomous Driving
  url: https://github.com/sushanthsamala/3D-Object-Detection-for-Autonomous-Driving
  code: https://github.com/sushanthsamala/3D-Object-Detection-for-Autonomous-Driving
  description: Developed a machine learning model to detect and localize vehicles, pedestrians on the roads captured using LIDAR technology by KITTI. Used 3D bounding boxes to localize the objects with an <strong>accuracy of 82%</strong>.
  used:
    - thing: Python
    - thing: CNN
    - thing: HOG
    - thing: Machine Learning

- name: Recognizing Hand Written Digits
  url: https://github.com/sushanthsamala/digit-recognizer
  code: https://github.com/sushanthsamala/digit-recognizer
  description: Recognizing handwritten numbers is very easy for humans, but it's a difficult task for machines. I created a simple handwritten digit recognizer using PyTorch.
  used:
    - thing: Python
    - thing: PyTorch
    - thing: Modular CNN
    - thing: Machine Learning
    - thing: MNIST

- name: Data Management
  url: https://github.com/kwy518/Data-Management
  code: https://github.com/kwy518/Data-Management
  description: Created a search function to search through through an integrated set of data sources for an authenticated user and return relevant results with minimum latency.
  used:
    - thing: Python
    - thing: Flask
    - thing: AWS API Gateway
    - thing: AWS Lambda
    - thing: pandas
    - thing: xlrd
    - thing: gspread

- name: E-Commerce Website
  url: https://github.com/Agile-Organization/recommendations
  code: https://github.com/Agile-Organization/recommendations
  description: Currently working on an E-commerce website as a part of my academic project. Building the back-end code base for processing transactions, user authentication using Agile methodologies.
  used:
    - thing: Python
    - thing: Vagrant
    - thing: Docker
    - thing: Kubernetes
    - thing: VirtualBox
    - thing: AWS

- name: Identifying Fraud from Enron Dataset
  url: https://github.com/sushanthsamala/Enron_Fraud_Detection
  code: https://github.com/sushanthsamala/Enron_Fraud_Detection
  description: Built a machine learning model to predict fraudsters using the Enron Email Dataset. The model analyses the number of emails exchanged, the frequency of the emails and other attributes to predict the fraudster. The model can predict correctly with an <strong>accuracy of 88%</strong>.
  used:
    - thing: Python
    - thing: Yellowbrick
    - thing: Pickle
    - thing: Sklearn

- name: Data Atom
  url: https://github.com/sushanthsamala/D-Atom
  code: https://github.com/sushanthsamala/D-Atom
  description: Devised a python application which can encrypt and decrypt mp3, mp4, text files for safe transmission of data.
  used:
    - thing: Python
    - thing: Encryption

- name: Ratatouille
  url: https://github.com/sushanthsamala/Ratatouille
  code: https://github.com/sushanthsamala/Ratatouille
  description: Built a python game using PyAudio, PyVideo, PyGame modules. A shooter game with 10 levels with increasing difficulty.
  used:
    - thing: Python
    - thing: PyAudio
    - thing: PyVideo
    - thing: PyGame
